version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: carrier-sales-db
    environment:
      POSTGRES_USER: carrier_user
      POSTGRES_PASSWORD: carrier_password_123
      POSTGRES_DB: carrier_sales
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U carrier_user -d carrier_sales"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - carrier-network

  # Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: carrier-sales-api
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://carrier_user:carrier_password_123@db:5432/carrier_sales?schema=public
      - API_KEY=hrcs_7k9mP2xQwL5nR8vJ4tY6zF3bN1aS0dG
      - PORT=8080
      - NODE_ENV=production
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - carrier-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local

networks:
  carrier-network:
    driver: bridge